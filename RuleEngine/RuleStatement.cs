//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace RuleEngine
{
    public partial class RuleStatement
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int TransSpecId
        {
            get { return _transSpecId; }
            set
            {
                if (_transSpecId != value)
                {
                    if (tblTransitionSpecification != null && tblTransitionSpecification.Id != value)
                    {
                        tblTransitionSpecification = null;
                    }
                    _transSpecId = value;
                }
            }
        }
        private int _transSpecId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual string RsBracketNo
        {
            get;
            set;
        }
    
        public virtual string RuleConnectors
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<RuleSet> tblRuleSets
        {
            get
            {
                if (_tblRuleSets == null)
                {
                    var newCollection = new FixupCollection<RuleSet>();
                    newCollection.CollectionChanged += FixuptblRuleSets;
                    _tblRuleSets = newCollection;
                }
                return _tblRuleSets;
            }
            set
            {
                if (!ReferenceEquals(_tblRuleSets, value))
                {
                    var previousValue = _tblRuleSets as FixupCollection<RuleSet>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixuptblRuleSets;
                    }
                    _tblRuleSets = value;
                    var newValue = value as FixupCollection<RuleSet>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixuptblRuleSets;
                    }
                }
            }
        }
        private ICollection<RuleSet> _tblRuleSets;
    
        public virtual TransitionSpecification tblTransitionSpecification
        {
            get { return _tblTransitionSpecification; }
            set
            {
                if (!ReferenceEquals(_tblTransitionSpecification, value))
                {
                    var previousValue = _tblTransitionSpecification;
                    _tblTransitionSpecification = value;
                    FixuptblTransitionSpecification(previousValue);
                }
            }
        }
        private TransitionSpecification _tblTransitionSpecification;

        #endregion
        #region Association Fixup
    
        private void FixuptblTransitionSpecification(TransitionSpecification previousValue)
        {
            if (previousValue != null && previousValue.tblRuleStatements.Contains(this))
            {
                previousValue.tblRuleStatements.Remove(this);
            }
    
            if (tblTransitionSpecification != null)
            {
                if (!tblTransitionSpecification.tblRuleStatements.Contains(this))
                {
                    tblTransitionSpecification.tblRuleStatements.Add(this);
                }
                if (TransSpecId != tblTransitionSpecification.Id)
                {
                    TransSpecId = tblTransitionSpecification.Id;
                }
            }
        }
    
        private void FixuptblRuleSets(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RuleSet item in e.NewItems)
                {
                    item.tblRuleStatement = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RuleSet item in e.OldItems)
                {
                    if (ReferenceEquals(item.tblRuleStatement, this))
                    {
                        item.tblRuleStatement = null;
                    }
                }
            }
        }

        #endregion
    }
}
